# Blueprint Render para consulting-notifications (Rails + Postgres)

databases:
  - name: consulting-notifications-db
    databaseName: consulting_notifications
    plan: free
    # postgresMajorVersion: 15   # (opcional) fixe a versão se quiser

services:
  - type: web
    name: consulting-notifications
    runtime: docker
    plan: free
    dockerfilePath: ./Dockerfile
    autoDeploy: true
    # (opcional) Se quiser definir um health check explícito:
    # healthCheckPath: / # ou /up se você criar essa rota
    envVars:
      # Ambiente Rails
      - key: RAILS_ENV
        value: production

      # Master key (NÃO coloque o valor aqui no arquivo público)
      # Após o primeiro deploy via blueprint:
      #   Vá em: Service > Environment > (campo pendente) > cole o conteúdo de config/master.key
      - key: RAILS_MASTER_KEY
        sync: false

      # URL do banco vem automaticamente do Postgres listado acima
      - key: DATABASE_URL
        fromDatabase:
          name: consulting-notifications-db
          property: connectionString

      # (OPCIONAL) Fallback direto da SECRET_KEY_BASE caso ainda não esteja correta nos credentials.
      # Gere com: bin/rails secret
      # REMOVA este bloco se já moveu secret_key_base para o topo de credentials.yml.enc
      # - key: SECRET_KEY_BASE
      #   value: <OPCIONAL_SECRET_KEY_BASE>

      # Logs e assets estáticos
      - key: RAILS_LOG_TO_STDOUT
        value: "1"
      - key: RAILS_SERVE_STATIC_FILES
        value: "1"

      # (Opcional) Ajuste de threads Puma (se quiser)
      # - key: RAILS_MAX_THREADS
      #   value: "5"

      # (Opcional) TZ
      # - key: TZ
      #   value: "America/Sao_Paulo"